/**
 * This code was generated by v0 by Vercel.
 * @see https://v0.dev/t/r86CGT126aq
 * Documentation: https://v0.dev/docs#integrating-generated-code-into-your-nextjs-app
 */
import Link from "next/link";
import { Button } from "../ui/button";
import { useUserAuth } from "../../app/_utils/auth-context";
import { useAPIContext } from "../../app/_utils/API-Context";

export default function header() {
  const { user, gitHubSignIn, firebaseSignOut } = useUserAuth();
  const { globalData } = useAPIContext();

  const handleLogin = async () => {
    await gitHubSignIn();
    console.log("Logged in");
  };

  const handleLogout = async () => {
    await firebaseSignOut();
  };

  // Function to format large numbers in the specified format
  function formatLargeNumber(number) {
    if (number >= 1e12) {
      return (number / 1e12).toFixed(2) + "T";
    } else if (number >= 1e9) {
      return (number / 1e9).toFixed(2) + "B";
    } else if (number >= 1e6) {
      return (number / 1e6).toFixed(2) + "M";
    } else {
      return number;
    }
  }

  // Function to determine the color class based on the percentage value
  function getPercentageColorClass(percentage) {
    if (percentage > 0) {
      return "text-[#66cc66]"; // Green color for positive percentage
    } else if (percentage < 0) {
      return "text-[#ff4d4d]"; // Red color for negative percentage
    } else {
      return ""; // No special color if zero
    }
  }

  return (
    <header key="1" className="bg-[#171725] text-white">
      <div className="container mx-auto px-6 py-3">
        <div className="flex items-center justify-between">
          <div className="flex items-center">
            <img alt="Crypto.com" className="mr-3 h-6 sm:h-9" src="/logo.png" />
            <nav className="hidden md:flex md:gap-6">
              <div className="text-[#c3aa68] font-bold text-xl" href="#">
                Crypto Sphere Hub
              </div>
              {/* <div className="group inline-block relative">
                <button className="hover:text-blue-500">Coins</button>
              </div> */}
            </nav>
          </div>
          <div className="flex items-center space-x-4">
            {user ? (
              <div className="flex items-center">
                <img
                  alt="User"
                  className="w-8 h-8 rounded-full"
                  src={user.photoURL}
                />
                <span className="ml-2">{user.email}</span>
                <Button
                  onClick={handleLogout}
                  className="text-white hover:bg-gray-700 hover:text-white"
                  variant="ghost"
                >
                  Log out
                </Button>
              </div>
            ) : (
              <Button
                onClick={handleLogin}
                className="text-white hover:bg-gray-700 hover:text-white"
                variant="ghost"
              >
                Log In
              </Button>
            )}
            <Button className="text-white" variant="ghost">
              USD
            </Button>
            <Button className="text-white" variant="ghost">
              English
            </Button>
            <Button className="text-white" variant="ghost">
              <SettingsIcon className="" />
            </Button>
          </div>
        </div>
        {/* Displaying global market data */}
        <div className="flex justify-between text-sm mt-3">
          <div>
            <span>Coins: {globalData?.activeCryptoCurrencies}</span>
            <span className="mx-3">|</span>
            <span>
              Market Cap: ${formatLargeNumber(globalData?.totalMarketCap)} USD
            </span>
            <span className="mx-3">|</span>
            <span>24H Change: </span>
            <span
              className={getPercentageColorClass(
                globalData?.totalMarketCapYesterdayPercentageChange
              )}
            >
              {globalData?.totalMarketCapYesterdayPercentageChange.toFixed(2)}%
            </span>
          </div>
          <div>
            <span>
              24H Volume: ${formatLargeNumber(globalData?.totalVolume24h)} USD
            </span>
            <span className="mx-3">|</span>
            <span>
              Dominance: BTC:{" "}
              <span>{globalData?.btcDominance.toFixed(2)}%</span>, ETH:{" "}
              <span>{globalData?.ethDominance.toFixed(2)}%</span>
            </span>
          </div>
        </div>
      </div>
    </header>
  );
}

function SettingsIcon(props) {
  return (
    <svg
      {...props}
      xmlns="http://www.w3.org/2000/svg"
      width="24"
      height="24"
      viewBox="0 0 24 24"
      fill="none"
      stroke="currentColor"
      strokeWidth="2"
      strokeLinecap="round"
      strokeLinejoin="round"
    >
      <path d="M12.22 2h-.44a2 2 0 0 0-2 2v.18a2 2 0 0 1-1 1.73l-.43.25a2 2 0 0 1-2 0l-.15-.08a2 2 0 0 0-2.73.73l-.22.38a2 2 0 0 0 .73 2.73l.15.1a2 2 0 0 1 1 1.72v.51a2 2 0 0 1-1 1.74l-.15.09a2 2 0 0 0-.73 2.73l.22.38a2 2 0 0 0 2.73.73l.15-.08a2 2 0 0 1 2 0l.43.25a2 2 0 0 1 1 1.73V20a2 2 0 0 0 2 2h.44a2 2 0 0 0 2-2v-.18a2 2 0 0 1 1-1.73l.43-.25a2 2 0 0 1 2 0l.15.08a2 2 0 0 0 2.73-.73l.22-.39a2 2 0 0 0-.73-2.73l-.15-.08a2 2 0 0 1-1-1.74v-.5a2 2 0 0 1 1-1.74l.15-.09a2 2 0 0 0 .73-2.73l-.22-.38a2 2 0 0 0-2.73-.73l-.15.08a2 2 0 0 1-2 0l-.43-.25a2 2 0 0 1-1-1.73V4a2 2 0 0 0-2-2z" />
      <circle cx="12" cy="12" r="3" />
    </svg>
  );
}
